{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPS-BoldMT;\f1\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red24\green26\blue30;\red255\green255\blue255;\red24\green26\blue30;
}
{\*\expandedcolortbl;;\cssrgb\c12157\c13725\c15686;\cssrgb\c100000\c100000\c100000;\cssrgb\c12157\c13725\c15686;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0

\f0\b\fs30 \cf2 \cb3 Single-threaded CPU approach:\

\f1\b0 Because N elements would require N additions, the runtime scales as O(N). \
\

\f0\b Naive GPU approach:
\f1\b0 \
\pard\tx0\tx220\pardeftab720\partightenfactor0
\cf2 Because each thread adds up all elements needed for each output array element in parallel, the runtime scales as O(N^2).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\cf2 \

\f0\b Recursive doubling GPU approach:\
\pard\tx220\tx720\pardeftab720\li20\fi-21\partightenfactor0

\f1\b0 \cf2 Because the approach involves log(N) phases, where O(N) additions are performed \cf4 \cb3 in parallel\cf2 \cb3  during each phase, the runtime scales as O(log(N)). }